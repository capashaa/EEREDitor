<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABqamoMbGxsNmxsbDZubm41Pz8/BGlpaRFtbW1wbm5uf25ubn9ubm54ZmZmHoKCggBnZ2cgbGxsIWxs
        bCFubm4Xa2trTG1tbehubm7ubW1t2Wtray1paWkibm5u4G5ubv9ubm7/bW1t8mpqajxqamoYbGxst21t
        bd9tbW3fbGxshm1tbU1ubm74bm5u/21tbelra2staWlpIm1tbeFubm7/bm5u/21tbfJqamo8ampqGG1t
        bdZubm7/bm5u/21tbZxubm5MbW1t7m1tbfRtbW3fbGxsL25ubiVtbW3hbm5u/25ubv9tbW3yb29vPmtr
        axptbW3Wbm5u/25ubv9tbW2cX19fEGpqakNqampDbm5uQ4mJiQ17e3sjcXFzkHFxcaZycnKlcXFzmXd3
        dzF5eXkVbm5udm1tbYxtbW2MbGxsVf///wD///8AAAAAAX9/fwaWlpYRmZmZKJqankecnJxTnJycU5qa
        nkeWlpwnlpaWEX9/fwhVVVUDf39/An9/fwJubm59bW1tkW5ubpJubm6Ng4ODQp6eoHSenqDZnp6h356e
        od+fn6HYnJyecnp6fVNubm6dbW1tnmxsbJ1ubm6GbW1t325ubv9ubm7/bW1t9Hx8f2SdnaCNn5+h/KCg
        ov+goKL/n5+h/J6eoIl6enp7bW1t+25ubv9ubm7/bW1t321tbd9ubm7/bm5u/21tbfSAgINnnp6gkp+f
        of2goKL/oKCi/5+fofyfn6GOe3t7fm1tbftubm7/bm5u/21tbd9tbW3fbm5u/25ubv9tbW30fn6AY56e
        oIyfn6H8oKCi/6Cgov+fn6H8np6giXl5e3ptbW37bm5u/25ubv9tbW3fbW1tkG5ubqltbW2qbm5uon19
        fUmenqBvnp6hz5+foNafn6DWn5+gzpycn217e3tbbW1ts21tbbRtbW20bW1tmD8/PwQ/Pz8EZmZmBXFx
        cQmPj58Ql5eXJZmZnEGbm5tNm5ubTZmZnEGbm5skn5+fEGpqagxfX18IbW1tB21tbQdnZ2cbbGxsXm5u
        bl9tbW1bcnJyFHt7eyNxcXGWcXFysHFxcbBxcXGidXV1Mo2NjQlsbGxQa2tuX2tra19ra2s0a2trUW1t
        bfZtbW38bW1t52xsbC9sbGwhbW1t3m5ubv9ubm7/bW1t8G1tbTppaWkRbW1txm1tbfxtbW38bW1th2tr
        a1FtbW35bm5u/2xsbOppaWkuampqH21tbd1ubm7/bm5u/21tbe9oaGg4b29vEG1tbclubm7/bm5u/21t
        bYlra2tMbW1t3W1tbeJtbW3Na2trLWpqah9tbW3dbm5u/25ubv9tbW3vampqN29vbxBtbW2ubW1t4m1t
        beJtbW15ABAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>